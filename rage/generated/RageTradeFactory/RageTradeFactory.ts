// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class GovernancePending extends ethereum.Event {
  get params(): GovernancePending__Params {
    return new GovernancePending__Params(this);
  }
}

export class GovernancePending__Params {
  _event: GovernancePending;

  constructor(event: GovernancePending) {
    this._event = event;
  }

  get previousGovernancePending(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newGovernancePending(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GovernanceTransferred extends ethereum.Event {
  get params(): GovernanceTransferred__Params {
    return new GovernanceTransferred__Params(this);
  }
}

export class GovernanceTransferred__Params {
  _event: GovernanceTransferred;

  constructor(event: GovernanceTransferred) {
    this._event = event;
  }

  get previousGovernance(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newGovernance(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolInitialized extends ethereum.Event {
  get params(): PoolInitialized__Params {
    return new PoolInitialized__Params(this);
  }
}

export class PoolInitialized__Params {
  _event: PoolInitialized;

  constructor(event: PoolInitialized) {
    this._event = event;
  }

  get vPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vPoolWrapper(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TeamMultisigPending extends ethereum.Event {
  get params(): TeamMultisigPending__Params {
    return new TeamMultisigPending__Params(this);
  }
}

export class TeamMultisigPending__Params {
  _event: TeamMultisigPending;

  constructor(event: TeamMultisigPending) {
    this._event = event;
  }

  get previousTeamMultisigPending(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTeamMultisigPending(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TeamMultisigTransferred extends ethereum.Event {
  get params(): TeamMultisigTransferred__Params {
    return new TeamMultisigTransferred__Params(this);
  }
}

export class TeamMultisigTransferred__Params {
  _event: TeamMultisigTransferred;

  constructor(event: TeamMultisigTransferred) {
    this._event = event;
  }

  get previousTeamMultisig(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTeamMultisig(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RageTradeFactory extends ethereum.SmartContract {
  static bind(address: Address): RageTradeFactory {
    return new RageTradeFactory('RageTradeFactory', address);
  }

  clearingHouse(): Address {
    let result = super.call('clearingHouse', 'clearingHouse():(address)', []);

    return result[0].toAddress();
  }

  try_clearingHouse(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'clearingHouse',
      'clearingHouse():(address)',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governance(): Address {
    let result = super.call('governance', 'governance():(address)', []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall('governance', 'governance():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governancePending(): Address {
    let result = super.call(
      'governancePending',
      'governancePending():(address)',
      []
    );

    return result[0].toAddress();
  }

  try_governancePending(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'governancePending',
      'governancePending():(address)',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxyAdmin(): Address {
    let result = super.call('proxyAdmin', 'proxyAdmin():(address)', []);

    return result[0].toAddress();
  }

  try_proxyAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall('proxyAdmin', 'proxyAdmin():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  teamMultisig(): Address {
    let result = super.call('teamMultisig', 'teamMultisig():(address)', []);

    return result[0].toAddress();
  }

  try_teamMultisig(): ethereum.CallResult<Address> {
    let result = super.tryCall('teamMultisig', 'teamMultisig():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  teamMultisigPending(): Address {
    let result = super.call(
      'teamMultisigPending',
      'teamMultisigPending():(address)',
      []
    );

    return result[0].toAddress();
  }

  try_teamMultisigPending(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'teamMultisigPending',
      'teamMultisigPending():(address)',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vPoolWrapperLogicAddress(): Address {
    let result = super.call(
      'vPoolWrapperLogicAddress',
      'vPoolWrapperLogicAddress():(address)',
      []
    );

    return result[0].toAddress();
  }

  try_vPoolWrapperLogicAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'vPoolWrapperLogicAddress',
      'vPoolWrapperLogicAddress():(address)',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vQuote(): Address {
    let result = super.call('vQuote', 'vQuote():(address)', []);

    return result[0].toAddress();
  }

  try_vQuote(): ethereum.CallResult<Address> {
    let result = super.tryCall('vQuote', 'vQuote():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AcceptGovernanceTransferCall extends ethereum.Call {
  get inputs(): AcceptGovernanceTransferCall__Inputs {
    return new AcceptGovernanceTransferCall__Inputs(this);
  }

  get outputs(): AcceptGovernanceTransferCall__Outputs {
    return new AcceptGovernanceTransferCall__Outputs(this);
  }
}

export class AcceptGovernanceTransferCall__Inputs {
  _call: AcceptGovernanceTransferCall;

  constructor(call: AcceptGovernanceTransferCall) {
    this._call = call;
  }
}

export class AcceptGovernanceTransferCall__Outputs {
  _call: AcceptGovernanceTransferCall;

  constructor(call: AcceptGovernanceTransferCall) {
    this._call = call;
  }
}

export class AcceptTeamMultisigTransferCall extends ethereum.Call {
  get inputs(): AcceptTeamMultisigTransferCall__Inputs {
    return new AcceptTeamMultisigTransferCall__Inputs(this);
  }

  get outputs(): AcceptTeamMultisigTransferCall__Outputs {
    return new AcceptTeamMultisigTransferCall__Outputs(this);
  }
}

export class AcceptTeamMultisigTransferCall__Inputs {
  _call: AcceptTeamMultisigTransferCall;

  constructor(call: AcceptTeamMultisigTransferCall) {
    this._call = call;
  }
}

export class AcceptTeamMultisigTransferCall__Outputs {
  _call: AcceptTeamMultisigTransferCall;

  constructor(call: AcceptTeamMultisigTransferCall) {
    this._call = call;
  }
}

export class InitializePoolCall extends ethereum.Call {
  get inputs(): InitializePoolCall__Inputs {
    return new InitializePoolCall__Inputs(this);
  }

  get outputs(): InitializePoolCall__Outputs {
    return new InitializePoolCall__Outputs(this);
  }
}

export class InitializePoolCall__Inputs {
  _call: InitializePoolCall;

  constructor(call: InitializePoolCall) {
    this._call = call;
  }

  get initializePoolParams(): InitializePoolCallInitializePoolParamsStruct {
    return this._call.inputValues[0].value.toTuple() as InitializePoolCallInitializePoolParamsStruct;
  }
}

export class InitializePoolCall__Outputs {
  _call: InitializePoolCall;

  constructor(call: InitializePoolCall) {
    this._call = call;
  }
}

export class InitializePoolCallInitializePoolParamsStruct extends ethereum.Tuple {
  get deployVTokenParams(): InitializePoolCallInitializePoolParamsDeployVTokenParamsStruct {
    return this[0].toTuple() as InitializePoolCallInitializePoolParamsDeployVTokenParamsStruct;
  }

  get poolInitialSettings(): InitializePoolCallInitializePoolParamsPoolInitialSettingsStruct {
    return this[1].toTuple() as InitializePoolCallInitializePoolParamsPoolInitialSettingsStruct;
  }

  get liquidityFeePips(): i32 {
    return this[2].toI32();
  }

  get protocolFeePips(): i32 {
    return this[3].toI32();
  }

  get slotsToInitialize(): i32 {
    return this[4].toI32();
  }
}

export class InitializePoolCallInitializePoolParamsDeployVTokenParamsStruct extends ethereum.Tuple {
  get vTokenName(): string {
    return this[0].toString();
  }

  get vTokenSymbol(): string {
    return this[1].toString();
  }

  get cTokenDecimals(): i32 {
    return this[2].toI32();
  }
}

export class InitializePoolCallInitializePoolParamsPoolInitialSettingsStruct extends ethereum.Tuple {
  get initialMarginRatioBps(): i32 {
    return this[0].toI32();
  }

  get maintainanceMarginRatioBps(): i32 {
    return this[1].toI32();
  }

  get maxVirtualPriceDeviationRatioBps(): i32 {
    return this[2].toI32();
  }

  get twapDuration(): BigInt {
    return this[3].toBigInt();
  }

  get isAllowedForTrade(): boolean {
    return this[4].toBoolean();
  }

  get isCrossMargined(): boolean {
    return this[5].toBoolean();
  }

  get oracle(): Address {
    return this[6].toAddress();
  }
}

export class InitiateGovernanceTransferCall extends ethereum.Call {
  get inputs(): InitiateGovernanceTransferCall__Inputs {
    return new InitiateGovernanceTransferCall__Inputs(this);
  }

  get outputs(): InitiateGovernanceTransferCall__Outputs {
    return new InitiateGovernanceTransferCall__Outputs(this);
  }
}

export class InitiateGovernanceTransferCall__Inputs {
  _call: InitiateGovernanceTransferCall;

  constructor(call: InitiateGovernanceTransferCall) {
    this._call = call;
  }

  get newGovernancePending(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitiateGovernanceTransferCall__Outputs {
  _call: InitiateGovernanceTransferCall;

  constructor(call: InitiateGovernanceTransferCall) {
    this._call = call;
  }
}

export class InitiateTeamMultisigTransferCall extends ethereum.Call {
  get inputs(): InitiateTeamMultisigTransferCall__Inputs {
    return new InitiateTeamMultisigTransferCall__Inputs(this);
  }

  get outputs(): InitiateTeamMultisigTransferCall__Outputs {
    return new InitiateTeamMultisigTransferCall__Outputs(this);
  }
}

export class InitiateTeamMultisigTransferCall__Inputs {
  _call: InitiateTeamMultisigTransferCall;

  constructor(call: InitiateTeamMultisigTransferCall) {
    this._call = call;
  }

  get newTeamMultisigPending(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitiateTeamMultisigTransferCall__Outputs {
  _call: InitiateTeamMultisigTransferCall;

  constructor(call: InitiateTeamMultisigTransferCall) {
    this._call = call;
  }
}

export class SetVPoolWrapperLogicAddressCall extends ethereum.Call {
  get inputs(): SetVPoolWrapperLogicAddressCall__Inputs {
    return new SetVPoolWrapperLogicAddressCall__Inputs(this);
  }

  get outputs(): SetVPoolWrapperLogicAddressCall__Outputs {
    return new SetVPoolWrapperLogicAddressCall__Outputs(this);
  }
}

export class SetVPoolWrapperLogicAddressCall__Inputs {
  _call: SetVPoolWrapperLogicAddressCall;

  constructor(call: SetVPoolWrapperLogicAddressCall) {
    this._call = call;
  }

  get _vPoolWrapperLogicAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVPoolWrapperLogicAddressCall__Outputs {
  _call: SetVPoolWrapperLogicAddressCall;

  constructor(call: SetVPoolWrapperLogicAddressCall) {
    this._call = call;
  }
}
