specVersion: 0.0.2
description: Rage Perpswap Contracts
repository: https://github.com/rage-trade/perpswap-contracts
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: AccountLibrary
    network: arbitrum-rinkeby
    source:
      address: '0x537c63350D6C59d9DA4E065Ba1051c5D544d19ab' # ClearingHouse Address since AccountLibrary events are emitted there
      abi: AccountLibrary
      startBlock: 9455996
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Account
        - Margin
        - TokenPosition
        - LiquidateToken
        - LiquidateRangePosition
        - LiquidityPosition
        - Protocol
      abis:
        - name: AccountLibrary
          file: ./abis/AccountLibrary.json
      file: ./src/mappings/account.ts
      eventHandlers:
        - event: AccountCreated(indexed address,uint256)
          handler: handleAccountCreated
        - event: DepositMargin(uint256,address,uint256)
          handler: handleDepositMargin
        - event: FundingPayment(uint256,address,int24,int24,int256)
          handler: handleFundingPayment
        - event: LiquidateRanges(uint256,address,int256,int256,int256)
          handler: handleLiquidateRanges
        - event: LiquidateTokenPosition(uint256,uint256,address,uint16,uint256,uint256,int256)
          handler: handleLiquidateTokenPosition
        - event: LiquidityChange(uint256,address,int24,int24,int128,uint8,int256,int256)
          handler: handleLiquidityChange
        - event: LiquidityFee(uint256,address,int24,int24,int256)
          handler: handleLiquidityFee
        - event: LiquidityTokenPositionChange(uint256,address,int24,int24,int256)
          handler: handleLiquidityTokenPositionChange
        - event: ProtocolFeeWithdrawm(address,uint256)
          handler: handleProtocolFeeWithdrawm
        - event: TokenPositionChange(uint256,address,int256,int256)
          handler: handleTokenPositionChange
        - event: WithdrawMargin(uint256,address,uint256)
          handler: handleWithdrawMargin
        - event: UpdateProfit(uint256,int256)
          handler: handleUpdateProfit
  - kind: ethereum/contract
    name: Factory
    network: arbitrum-rinkeby
    source:
      address: '0x1F98431c8aD98523631AE4a59f267346ea31F984'
      abi: Factory
      startBlock: 9455996 # 175
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Pool
          file: ./abis/pool.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint24,int24,address)
          handler: handlePoolCreated
templates:
  - kind: ethereum/contract
    name: Pool
    network: arbitrum-rinkeby
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/core.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Flash(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleFlash
